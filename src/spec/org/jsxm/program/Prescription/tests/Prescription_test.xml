<?xml version="1.0" encoding="UTF-8"?>
<set xmlns="http://www.jsxm.org/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.jsxm.org/schema http://www.jsxm.org/schema/test_set.xsd" k="2">
  <definitions />
  <sequences>
    <sequence name="getContent">
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="isUsed">
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="use">
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">tcyfrkn</name>
          <quantity type="xs:int">3</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">koccubl</name>
          <quantity type="xs:int">6</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{koccubl=6}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">lsmdwpr</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{lsmdwpr=7}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">jwyzqrh</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{jwyzqrh=4}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">lpzcmyy</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">jufeurh</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">wxyywsu</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_addItem">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">kafwojs</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kafwojs=8}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">njzhjkz</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kafwojs=8, njzhjkz=5}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">utyiums</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kafwojs=8, njzhjkz=5, utyiums=7}</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_addItem_close">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">mpnqqxz</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{mpnqqxz=10}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">kpgqtsg</name>
          <quantity type="xs:int">1</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kpgqtsg=1, mpnqqxz=10}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ekljhhg</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ekljhhg=9}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">syxmckm</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ekljhhg=9, syxmckm=7}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">veslxqd</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{veslxqd=8}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ibhxrjw</name>
          <quantity type="xs:int">3</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{veslxqd=8, ibhxrjw=3}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">vxkacit</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{vxkacit=9}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">sjkqjil</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{vxkacit=9, sjkqjil=4}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_addItem">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">eslqevl</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{eslqevl=7}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">bjooics</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_close">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">nukywkw</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{nukywkw=7}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">gkqfgfi</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{gkqfgfi=5}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{gkqfgfi=5}</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_close_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">kqcrdta</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kqcrdta=4}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_close_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">kmibcvh</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{kmibcvh=7}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_use_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">wovtnwu</name>
          <quantity type="xs:int">1</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">kldjpuj</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">cnaodlf</name>
          <quantity type="xs:int">1</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">fwfnasx</name>
          <quantity type="xs:int">6</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">itdltns</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">sfkgood</name>
          <quantity type="xs:int">3</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">dxqmxgo</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ivlrvyx</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
  </sequences>
</set>

