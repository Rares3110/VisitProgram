<?xml version="1.0" encoding="UTF-8"?>
<set xmlns="http://www.jsxm.org/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.jsxm.org/schema http://www.jsxm.org/schema/test_set.xsd" k="2">
  <definitions />
  <sequences>
    <sequence name="getContent">
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="isUsed">
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="use">
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">nshngck</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">pgtuore</name>
          <quantity type="xs:int">6</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{pgtuore=6}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">imglldi</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{imglldi=7}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">sbaackz</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{sbaackz=8}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">cmbxpno</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">joncspl</name>
          <quantity type="xs:int">6</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">oqiohwo</name>
          <quantity type="xs:int">3</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_addItem">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">exdgavk</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{exdgavk=10}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">akpqrgo</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{exdgavk=10, akpqrgo=8}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">edxbjlp</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{edxbjlp=9, exdgavk=10, akpqrgo=8}</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_addItem_close">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">nrgjbvu</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{nrgjbvu=4}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ikwhzlj</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ikwhzlj=5, nrgjbvu=4}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">cilrsgn</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{cilrsgn=7}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">umsolbb</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{cilrsgn=7, umsolbb=10}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">jrohncm</name>
          <quantity type="xs:int">8</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{jrohncm=8}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">fjzuabq</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{fjzuabq=5, jrohncm=8}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_addItem_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">fbvutrl</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{fbvutrl=7}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">nttzekx</name>
          <quantity type="xs:int">4</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{nttzekx=4, fbvutrl=7}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_addItem">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">opetfhe</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{opetfhe=10}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">auodptu</name>
          <quantity type="xs:int">5</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_close">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ebxpavg</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ebxpavg=9}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="addItem_close_getContent">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ivlehlc</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ivlehlc=9}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{ivlehlc=9}</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_close_isUsed">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ugknscq</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{ugknscq=10}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="addItem_close_use">
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">faqcbwm</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemOutput">
          <result type="xs:string">{faqcbwm=10}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_use_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ynfnkek</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">twvzvyq</name>
          <quantity type="xs:int">10</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_getContent_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">szgtida</name>
          <quantity type="xs:int">9</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ctuqopl</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_getContent_use_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_getContent_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">lddupwl</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_getContent_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">oqfbeja</name>
          <quantity type="xs:int">3</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentOutput">
          <result type="xs:string">{}</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_use_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">szyvdyr</name>
          <quantity type="xs:int">2</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_isUsed_use_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_isUsed_use_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">false</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_addItem">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="addItem" />
        <input name="addItemInput">
          <name type="xs:string">ambdjcw</name>
          <quantity type="xs:int">7</quantity>
        </input>
        <output name="addItemInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_close">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_getContent">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="getContent" />
        <input name="getContentInput" />
        <output name="getContentInput_Error" />
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_isUsed">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
    </sequence>
    <sequence name="close_use_isUsed_isUsed_use">
      <call>
        <function name="close" />
        <input name="closeInput" />
        <output name="closeOutput" />
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="isUsed" />
        <input name="isUsedInput" />
        <output name="isUsedOutput">
          <result type="xs:boolean">true</result>
        </output>
      </call>
      <call>
        <function name="use" />
        <input name="useInput" />
        <output name="useInput_Error" />
      </call>
    </sequence>
  </sequences>
</set>

